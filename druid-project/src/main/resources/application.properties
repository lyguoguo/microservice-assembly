#数据源配置
spring.datasource.name=med2
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/dynamic-route?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&allowMultiQueries=true
spring.datasource.url=jdbc:mysql://118.178.92.93:3306/med2?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&allowMultiQueries=true
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/dynamic-route?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&allowMultiQueries=true&autoReconnect=true&failOverReadOnly=false
#spring.datasource.username=root
#spring.datasource.password=123456
spring.datasource.username=root
spring.datasource.password=xudan1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.connection-init-sqls=set names utf8mb4


# druid 连接池配置
#spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
#spring.datasource.druid.max-active=100
#spring.datasource.druid.initial-size=5
#spring.datasource.druid.max-wait=10000
#spring.datasource.druid.min-idle=5



#
##初始化连接池大小
#spring.datasource.druid.initial-size=5
##连接池中保留最小连接数
#
#spring.datasource.druid.min-idle=5
##连接池中保留的最大连接数
#spring.datasource.druid.max-active=100
##配置获取连接等待超时的时间
#spring.datasource.druid.max-wait=10000
##配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.druid.time-between-eviction-runs-millis=10000
##配置一个连接在池中最小生存的时间，单位是毫秒，30000=30s
#spring.datasource.druid.min-evictable-idle-time-millis=10000
##设置空闲时是否检测连接可用性
#spring.datasource.druid.test-while-idle=true
##设置获取连接时是否检测连接可用性
#spring.datasource.druid.test-on-borrow=true
##设置归还连接时是否检测连接可用性
#spring.datasource.druid.test-on-return=true
##设置检测连接是否可用的sql语句
#spring.datasource.druid.validation-query=select 1
#
#
##解决communitations link failure  社区地址： https://github.com/alibaba/druid/issues/3800
##数据库连接的心跳检测，如果数据库连接的空闲时间超过minEvictableIdleTimeMillis设置的时间，将进行检测并保活（告诉数据库这个连接有用，别杀掉）
#spring.datasource.druid.keep-alive=true
##配置连接池里的连接的最大生存时间，如果超过这个时间，主动丢弃连接，单位是毫秒，7200000ms=2h
#spring.datasource.druid.max-evictable-idle-time-millis=7200000
##单位：秒，检测连接是否有效的超时时间
#spring.datasource.druid.validation-query-timeout=3


#mybatis
mybatis.mapper-locations=classpath*:mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true

logging.config=classpath:log4j2.xml

server.port=8121




##druid连接池配置
##初始化连接池大小
#spring.datasource.druid.initial-size=5
##连接池中保留最小连接数
#spring.datasource.druid.min-idle=5
##连接池中保留的最大连接数
#spring.datasource.druid.max-active=100
##配置获取连接等待超时的时间
#spring.datasource.druid.max-wait=10000
##配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.druid.time-between-eviction-runs-millis=10000
##配置一个连接在池中最小生存的时间，单位是毫秒，30000=30s
#spring.datasource.druid.min-evictable-idle-time-millis=30000
##设置空闲时是否检测连接可用性
#spring.datasource.druid.test-while-idle=true
##设置获取连接时是否检测连接可用性
#spring.datasource.druid.test-on-borrow=false
##设置归还连接时是否检测连接可用性
#spring.datasource.druid.test-on-return=false
##设置检测连接是否可用的sql语句
#spring.datasource.druid.validation-query=select 1
#
#
##解决communitations link failure  社区地址： https://github.com/alibaba/druid/issues/3800
##数据库连接的心跳检测，如果数据库连接的空闲时间超过minEvictableIdleTimeMillis设置的时间，将进行检测并保活（告诉数据库这个连接有用，别杀掉）
#spring.datasource.druid.keep-alive=true
##配置连接池里的连接的最大生存时间，如果超过这个时间，主动丢弃连接，单位是毫秒，7200000ms=2h
#spring.datasource.druid.max-evictable-idle-time-millis=7200000
##单位：秒，检测连接是否有效的超时时间
#spring.datasource.druid.validation-query-timeout=3


# druid
# 数据库连接的心跳检测,防止数据库断开连接
spring.datasource.druid.keep-alive=true
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=10000
#单位：秒，检测连接是否有效的超时时间
spring.datasource.druid.validation-query-timeout=3
#配置一个连接在池中最小生存的时间
spring.datasource.druid.min-evictable-idle-time-millis=30000
# 连接池里的连接的最大生存时间 ,单位是毫秒 2h
spring.datasource.druid.max-evictable-idle-time-millis=7200000
spring.datasource.druid.validation-query=SELECT 1
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-borrow=false
##归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-return=false
##申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true

