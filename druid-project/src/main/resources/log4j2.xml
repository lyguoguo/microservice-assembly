<?xml version="1.0" encoding="UTF-8"?>
<!--设置log4j2的自身log级别为warn-->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，
	当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="warn" monitorInterval="30">
	<properties>
		<property name="LOG_HOME">/data/ftp/log/druid-project</property>
		<property name="FILE_LOG_PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} -%5p [TraceId:%X{traceId}] ${PID:-} [%15.15t] [%c{1.}:%L] : %m%n</property>
	</properties>
	<!--先定义所有的appender-->
	<appenders>
		<!--这个输出控制台的配置-->
		<console name="Console" target="SYSTEM_OUT">
<!--			<ElkJsonPatternLayout serviceName="yt-gateway-backend"/>-->
<!--			&lt;!&ndash;输出日志的格式 时间日期 日志级别 进程ID 分隔符 线程名 Logger名 日志内容&ndash;&gt;-->
			<PatternLayout pattern="${FILE_LOG_PATTERN}"/>
<!--			<JsonLayout compact="true"-->
<!--						locationInfo="true"-->
<!--						complete="false"-->
<!--						eventEol="true"-->
<!--						stacktraceAsString="true">-->
<!--				<KeyValuePair key="timestamp" value="$${date:yyyy-MM-dd HH:mm:ss.SSS}" />-->
<!--				&lt;!&ndash;				<KeyValuePair key="traceId" value="$${ctx:traceId}" />&ndash;&gt;-->
<!--			</JsonLayout>-->
		</console>

		<!-- 输出到文件，按天或者超过20MB分割 -->
		<RollingFile name="RollingFile" fileName="${LOG_HOME}/default.log" filePattern="${LOG_HOME}/history/default-%d{yyyy-MM-dd}-%i.log">
			<!-- 需要记录的级别 -->
			<Filters>
				<!--如果是debug\info\warn输出-->
				<ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
			</Filters>

			<PatternLayout pattern="${FILE_LOG_PATTERN}" />

			<Policies>
				<OnStartupTriggeringPolicy />
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="50 MB" />
			</Policies>

			<DefaultRolloverStrategy max="30">
				<Delete basePath="${LOG_HOME}/history/" maxDepth="2">
					<IfFileName glob="default*.log" />
					<!--!Note: 这里的age必须和filePattern协调,数字最好>2, 否则可能造成删除的时候, 最近的文件还处于被占用状态,导致删除不成功! -->
					<!--30天 -->
					<IfLastModified age="30D" />
				</Delete>
			</DefaultRolloverStrategy>
		</RollingFile>

		<!-- ERROR Log -->
		<RollingFile name="ERROR" fileName="${LOG_HOME}/error.log" filePattern="${LOG_HOME}/history/error-%d{yyyy-MM-dd}-%i.log">
			<!-- 需要记录的级别 -->
			<Filters>
				<ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
			</Filters>

			<PatternLayout pattern="${FILE_LOG_PATTERN}" />

			<Policies>
				<OnStartupTriggeringPolicy />
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="50 MB" />
			</Policies>

			<DefaultRolloverStrategy max="30">
				<Delete basePath="${LOG_HOME}/history/" maxDepth="2">
					<IfFileName glob="error*.log" />
					<!--!Note: 这里的age必须和filePattern协调,数字最好>2, 否则可能造成删除的时候, 最近的文件还处于被占用状态,导致删除不成功! -->
					<!--30天 -->
					<IfLastModified age="30D" />
				</Delete>
			</DefaultRolloverStrategy>
		</RollingFile>
	</appenders>

	<Loggers>
		<Root level="debug"> <!-- 全局配置 -->
			<AppenderRef ref="Console" />
			<AppenderRef ref="RollingFile" />
			<AppenderRef ref="ERROR" />
		</Root>
		<Logger name="druid.sql.Statement" level="debug" additivity="false">
			<AppenderRef ref="Console" />
		</Logger>
		<Logger name="druid.sql.ResultSet" level="debug" additivity="false">
			<AppenderRef ref="Console" />
		</Logger>
		<logger name="org.apache.http" level="info" />
		<Logger name="org.apache.zookeeper" level="error" />
		<logger name="io.netty.util" level="warn" />
		<logger name="org.springframework" level="info" />
		<logger name="io.lettuce.core" level="info" />
		<Logger name="com.alibaba.nacos" level="warn" />
	</Loggers>

</configuration>